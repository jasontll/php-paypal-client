<?php
/**
 * StoredPaymentSourceTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orders
 *
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * StoredPaymentSourceTest Class Doc Comment
 *
 * @category    Class
 * @description Provides additional details to process a payment using a &#x60;payment_source&#x60; that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).&lt;br/&gt;Parameter compatibility:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;&#x60;payment_type&#x3D;ONE_TIME&#x60; is compatible only with &#x60;payment_initiator&#x3D;CUSTOMER&#x60;.&lt;/li&gt;&lt;li&gt;&#x60;usage&#x3D;FIRST&#x60; is compatible only with &#x60;payment_initiator&#x3D;CUSTOMER&#x60;.&lt;/li&gt;&lt;li&gt;&#x60;previous_transaction_reference&#x60; or &#x60;previous_network_transaction_reference&#x60; is compatible only with &#x60;payment_initiator&#x3D;MERCHANT&#x60;.&lt;/li&gt;&lt;li&gt;Only one of the parameters - &#x60;previous_transaction_reference&#x60; and &#x60;previous_network_transaction_reference&#x60; - can be present in the request.&lt;/li&gt;&lt;/ul&gt;
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class StoredPaymentSourceTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "StoredPaymentSource"
     */
    public function testStoredPaymentSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_initiator"
     */
    public function testPropertyPaymentInitiator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_type"
     */
    public function testPropertyPaymentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage"
     */
    public function testPropertyUsage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "previous_network_transaction_reference"
     */
    public function testPropertyPreviousNetworkTransactionReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
